<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="approval">

<!-- 상신함 뷰 -->
<select id='submitList' resultType='approval.Ing_tableVO'>
select row_number() over(order by document_date asc) no, i.*, e2.name approver, a.document_status

from member m join employees e 
on m.email = e.email join ing_table i
on e.employee_id = i.employee_id join employees e2
on i.approver_id = e2.employee_id join document_approval a
on i.document_check = a.document_check

where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'Y'
order by no desc
</select>

<!-- 보관함 뷰 -->
<select id='lockerList' resultType='approval.Ing_tableVO'>
select row_number() over(order by document_date asc) no, i.*
from member m join employees e 
on m.email = e.email join ing_table i
on e.employee_id = i.employee_id
where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'N'
order by no desc
</select>

<!-- 결재함 뷰 -->
<select id='approvalList' resultType='approval.Ing_tableVO'>
select row_number() over(order by document_date asc) no, i.*, e2.name drafter, a.document_status

from member m join employees e
on m.email = e.email join ing_table i
on e.employee_id = i.approver_id join employees e2
on i.employee_id = e2.employee_id join document_approval a
on i.document_check = a.document_check

where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'Y'
order by no desc
</select>

<!-- 기안 제출 저장 처리 -->
<insert id='insertPost'>
insert into ing_table (employee_id, department_id, company_cd, document_title, document_content, approver_id, document_submit)
values (#{employee_id, jdbcType=VARCHAR}, #{department_id, jdbcType=VARCHAR}, 
#{company_cd, jdbcType=VARCHAR}, #{document_title, jdbcType=VARCHAR}, 
#{document_content, jdbcType=VARCHAR}, #{approver_id, jdbcType=VARCHAR}, 'Y')
</insert>

<!-- 기안 임시보관함 저장 처리 -->
<insert id='insertLocker'>
insert into ing_table (employee_id, department_id, company_cd, document_title, document_content, approver_id, document_submit)
values (#{employee_id, jdbcType=VARCHAR}, #{department_id, jdbcType=VARCHAR}, 
#{company_cd, jdbcType=VARCHAR}, #{document_title, jdbcType=VARCHAR}, 
#{document_content, jdbcType=VARCHAR}, #{approver_id, jdbcType=VARCHAR}, 'N')
</insert>

<!-- 특정 부서에 소속된 직원 리스트를 찾는다 -->
<select id='departmentEmployee' resultType='emp.EmpVO'>
select e.*, d.department_name
from employees e join departments d
on e.department_id = d.department_id
where d.department_name = #{department_name}
</select>

<select id='submitListDetail' resultType='approval.Ing_tableVO'>
select *
from (
select row_number() over(order by document_date asc) no, i.*, e2.name approver, a.document_status

from member m join employees e 
on m.email = e.email join ing_table i
on e.employee_id = i.employee_id join employees e2
on i.approver_id = e2.employee_id join document_approval a
on i.document_check = a.document_check

where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'Y'
order by no desc
)
where no = #{no}

<!-- select * -->
<!-- from ( select row_number() over(order by document_date asc) no, i.* -->
<!-- from ing_table i -->
<!-- order by no desc ) -->
<!-- where no = 1 -->
</select>

<select id='lockerListDetail' resultType='approval.Ing_tableVO'>
select *
from (
select row_number() over(order by document_date asc) no, i.*
from member m join employees e 
on m.email = e.email join ing_table i
on e.employee_id = i.employee_id
where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'n'
order by no desc
)
where no = #{no}
</select>

<delete id='deleteLockerOne'>
delete ing_table 
where ing_no = #{ing_no}
</delete>

<select id='approvalListDetail' resultType='approval.Ing_tableVO'>
select *
from
(
select row_number() over(order by document_date asc) no, i.*, e2.name drafter, a.document_status

from member m join employees e
on m.email = e.email join ing_table i
on e.employee_id = i.approver_id join employees e2
on i.employee_id = e2.employee_id join document_approval a
on i.document_check = a.document_check

where m.email = #{email, jdbcType=VARCHAR} and i.document_submit = 'Y'
order by no desc
)
where no = #{no}
</select>



</mapper>
